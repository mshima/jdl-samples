name: Integration
on: [push]
env:
    JHI_PROFILE: prod
    SPRING_OUTPUT_ANSI_ENABLED: NEVER
    SPRING_JPA_SHOW_SQL: false
    JHI_DISABLE_WEBPACK_LOGS: true
    JHI_E2E_HEADLESS: true
    NG_CLI_ANALYTICS: false

jobs:
    applications:
        name: ${{ matrix.jdl-file }} ${{ matrix.jhi-gen-version }}
        runs-on: ${{ matrix.os }}
        if: >-
            !contains(github.event.head_commit.message, '[ci skip]') &&
            !contains(github.event.head_commit.message, '[skip ci]')
        timeout-minutes: 40
        strategy:
            fail-fast: false
            matrix:
                node_version:
                    - 12.14.0
                os:
                    - ubuntu-latest
                jdl-file:
                    - blog.jh
                    - bootiful-music.jh
                    - bug-tracker.jh
                    - default.jdl
                    - library.jh
                    - microservice-ecommerce-store.jdl
                    - northwind-jdl.jh
                    - online-shop.jh
                    - simple-online-shop.jh
                jhi-gen-version:
                    - jhipster/generator-jhipster#master
        steps:
            #----------------------------------------------------------------------
            # Install all tools and check configuration
            #----------------------------------------------------------------------
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node_version }}
            - name: Download latest chrome binary
              run: |
                  sudo apt update
                  sudo apt install google-chrome-stable
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'

            #----------------------------------------------------------------------
            # Create Application folder
            #----------------------------------------------------------------------
            - name: Create application folder
              run: mkdir ../app

            #----------------------------------------------------------------------
            # Checkout Sample Repository
            #----------------------------------------------------------------------
            - name: Checkout sample repository
              uses: actions/checkout@v1

            #----------------------------------------------------------------------
            # Install JHipster
            #----------------------------------------------------------------------
            - name: Install jhipster
              run: npm install -g ${{ matrix.jhi-gen-version }}

            #----------------------------------------------------------------------
            # Install scripts blueprint
            #----------------------------------------------------------------------
            - name: Install scripts blueprint
              run: npm install -g generator-jhipster-scripts@0.2.0

            #----------------------------------------------------------------------
            # Copy jdl file
            #----------------------------------------------------------------------
            - name: Copy jdl files
              run: cp ${{ github.workspace }}/${{ matrix.jdl-file }} .
              working-directory: ../app

            #----------------------------------------------------------------------
            # Generate project
            #----------------------------------------------------------------------
            - name: Project generation
              run: jhipster import-jdl ${{ matrix.jdl-file }} --no-insight --blueprints scripts ${{ matrix.additional-parameters }}
              working-directory: ../app

            - name: Package.json information
              run: |
                  cat package.json || true
                  cat */package.json || true
              working-directory: ../app

            - name: Project information
              run: jhipster info
              working-directory: ../app

            #----------------------------------------------------------------------
            # Tests
            #----------------------------------------------------------------------
            - name: Configure github actions
              run: npm run ci:github:configure
              working-directory: ../app
              id: configure

            - name: Start db containers
              run: npm run ci:test:prepare:docker
              working-directory: ../app

            - name: Start others containers
              if: ${{ steps.configure.outputs.docker_others == 'true' }}
              run: npm run docker:others
              working-directory: ../app

            - name: Frontend tests
              run: npm test
              working-directory: ../app

            - name: Backend info
              if: ${{ always() }}
              run: npm run backend:info
              working-directory: ../app
              id: backend_info

            - name: Backend javadoc
              if: ${{ steps.backend_info.outcome == 'success' && always() }}
              run: npm run backend:doc:test
              working-directory: ../app

            - name: Backend test
              if: ${{ steps.backend_info.outcome == 'success' && always() }}
              run: npm run backend:test
              working-directory: ../app

            - name: Packaging
              if: ${{ always() }}
              run: npm run java:jar
              working-directory: ../app
              id: packaging

            - name: End-to-End
              if: ${{ steps.configure.outputs.e2e == 'true' && steps.packaging.outcome == 'success' && always() }}
              run: npm run ci:e2e
              working-directory: ../app
